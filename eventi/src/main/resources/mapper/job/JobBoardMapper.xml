<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eventi.left.job.mapper.JobBoardMapper">
	<!-- 구인게시글 검색(이걸하는 이유... 데이터 용량때문...) --> 
	<sql id="jSelect">
	
		<!-- 검색창 입력 시 -->
		<if test="title !=null and title != ''">
			AND ( TITLE LIKE '%${title}%' OR JOB_CNTN LIKE '%${title}%' ) <!-- where or를 ()로 묶어야 밑으로 안감 and가 먼저  -->
		</if>
		<!-- option 선택 시-->
		<if test="eType !=null and eType != ''">
			AND E_TYPE = #{eType}
		</if>
		AND CLOSE_DT >= SYSDATE 
	</sql>	
	
	<sql id="likeSelect">
		<if test="userId != null and userId != ''">
		AND L.USER_ID = #{userId}			
		</if>

	</sql>
	<!-- 구인게시글 전체조회 -->
	<select id="getJobList" resultType="com.eventi.left.job.service.JobBoardVO">
		SELECT JOB_NO,
				TITLE,
				JOB_CNTN,
				PAY,
				LOC,
				code_select(E_TYPE) E_TYPE,
				W_SDAY,
				W_EDAY,
				W_HOUR,
				QUALIFICATION,
				PREFERENCE,
				IMG,
				USER_ID,
				DT,
				CLOSE_DT,
				CLOSE_DT - SYSDATE AS remain,
				<!-- 순서대로 컬럼명 쓰기 -->
                CNT,
                RECOUNT,
                SEE              
         FROM (SELECT ROWNUM RN, A.* FROM(
		           SELECT DISTINCT J.*, 
		                 (SELECT COUNT(*) FROM LIKES WHERE TARGET_NO = J.JOB_NO) AS CNT,
		                 (SELECT COUNT(*) FROM RESUME_BOARD WHERE JOB_NO = J.JOB_NO) AS reCount
		            FROM JOB_BOARD J, LIKES L, RESUME_BOARD R
		           WHERE J.JOB_NO = L.TARGET_NO(+)
		             AND J.JOB_NO = R.JOB_NO(+)
		  
			<include refid="jSelect" />
			<include refid="likeSelect" />
			     <if test="orderCol !=null and orderCol != ''">
                ORDER BY ${orderCol} desc
                </if>
	  	<![CDATA[
			   ) A WHERE ROWNUM <= #{last}) 
	    WHERE RN >= #{first}
		]]>
	</select>
	
	<!-- 게시글 개수 -->
	<select id="count" resultType="int">
		SELECT COUNT(*)
		FROM JOB_BOARD
	</select>
	
	<!-- 구인게시글 단건조회 -->
	<select id="getJob" resultType="com.eventi.left.job.service.JobBoardVO">
		SELECT j.*
			  ,CLOSE_DT - SYSDATE AS remain
			  ,(select count(*)
	              from likes l
	             where l.category = 'T03'
	              and l.target_No = #{jobNo}) as cnt
	          ,(select count(*)
	              from resume_board r
	             where r.job_No = #{jobNo}) as re_Count   
		FROM JOB_BOARD j
		WHERE JOB_NO  = #{jobNo}
	</select>
	
	<!-- 임시저장한 게시글 불러오기 -->
	<select id="jSave" resultType="com.eventi.left.job.service.JobBoardVO">
		SELECT *
		FROM JOB_BOARD
		WHERE USER_ID = #{userId}
		AND SAVE = 'Y'
	</select>
	
	<!-- 게시글 수정 jobno, userid, interest 제외-->
	<update id="getJobUpdate" parameterType="com.eventi.left.job.service.JobBoardVO">
		UPDATE JOB_BOARD
		SET 
		TITLE = #{title},
		JOB_CNTN = #{jobCntn},
		PAY = #{pay},
		LOC = #{loc},
		E_TYPE = #{eType},
		W_SDAY = #{wSday},
		W_EDAY = #{wEday},
		W_HOUR = #{wHour},
		QUALIFICATION = #{qualification},
		PREFERENCE = #{preference},
		IMG = #{img}	
		WHERE JOB_NO=#{jobNo}
	</update>
	
	
	
	<!-- 게시글 등록 -->
	<insert id="jobInsert">
		<selectKey keyProperty="jobNo" resultType="String" order="BEFORE">
		SELECT 'JB'|| JOB_BOARD_SEQ.NEXTVAL FROM DUAL
		</selectKey>
	
		INSERT INTO JOB_BOARD
		(JOB_NO, TITLE, JOB_CNTN, PAY, LOC, E_TYPE, W_SDAY, W_EDAY, W_HOUR, QUALIFICATION, PREFERENCE, IMG, USER_ID, DT, CLOSE_DT, SAVE) <!-- DB -->
		VALUES(#{jobNo}, #{title}, #{jobCntn}, 
				#{pay}, #{loc}, #{eType}, #{wSday}, #{wEday}, #{wHour}, #{qualification}, #{preference}, #{img}, #{userId}, sysdate, #{closeDt}, #{save}) <!-- VO -->
	</insert>
	
	<!-- 게시글 삭제 -->
	<delete id="jobDelete">
		DELETE FROM JOB_BOARD
		WHERE JOB_NO=#{jobNo}
	</delete>
	
	<!-- 게시판 조회수 -->
	<update id="seeUp" parameterType="com.eventi.left.job.service.JobBoardVO">
		UPDATE JOB_BOARD SET
		SEE = SEE+1
		WHERE JOB_NO  = #{jobNo}
	</update>
</mapper>