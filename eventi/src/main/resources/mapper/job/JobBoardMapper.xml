<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eventi.left.job.mapper.JobBoardMapper">
	<!-- 구인게시글 검색 --> 
	<sql id="jSelect">
			<!-- 검색창 입력 시 -->
			<if test="title !=null and title != ''">
				AND (J.TITLE LIKE '%${title}%' OR J.JOB_CNTN LIKE '%${title}%' ) <!-- where or를 ()로 묶어야 밑으로 안감 and가 먼저  -->
			</if>
			<!-- option 선택 시-->
			<if test="eType !=null and eType != ''">
				AND E_TYPE = #{eType}
			</if>
	</sql>	
	
	<sql id="likeSelect">
		<if test="userId != null and userId != ''">
		AND L.USER_ID = #{userId}			
		</if>
	</sql>
	
	<sql id="search">		
			<if test="title !=null and title != ''">
				AND TITLE LIKE '%'||#{title}||'%'  
			</if>
			<if test="jobCntn!=null and jobCntn!=null != ''">
				AND JOB_CNTN LIKE '%'||#{jobCntn}||'%'  
			</if>		
	</sql>
		
	<!-- 구인게시글 전체조회 -->
	<select id="getJobList" resultType="com.eventi.left.job.service.JobBoardVO">
		SELECT JOB_NO,
				TITLE,
				JOB_CNTN,
				PAY,
				code_select(LOC) LOC,
				code_select(E_TYPE) E_TYPE,
				W_SDAY,
				W_EDAY,
				W_HOUR,
				QUALIFICATION,
				PREFERENCE,
				(SELECT SEV_NM 
                  FROM FILES 
                   WHERE TARGET_ID = JOB_NO
                   AND ROWNUM=1) AS IMG,
				USER_ID,
				DT,
				CLOSE_DT,
				CLOSE_DT - SYSDATE AS remain,
				<!-- 순서대로 컬럼명 쓰기 -->
                CNT,
                RECOUNT,
                SEE
                <if test="likes != null and likes != ''">
					,(select count(*) from likes where user_id = #{likes} and target_no = b.job_No) as likes
				</if>
                              
         FROM (SELECT ROWNUM RN, A.* FROM(
		           SELECT DISTINCT J.*, 
		                 (SELECT COUNT(*) FROM LIKES WHERE TARGET_NO = J.JOB_NO) AS CNT,
		                 (SELECT COUNT(*) FROM RESUME_BOARD WHERE JOB_NO = J.JOB_NO) AS reCount
		            FROM JOB_BOARD J, LIKES L, RESUME_BOARD R
		           WHERE J.JOB_NO = L.TARGET_NO(+)
		             AND J.JOB_NO = R.JOB_NO(+)
		  
			<include refid="jSelect" />
			<include refid="likeSelect" />
			    <if test="orderCol !=null and orderCol != ''">
                ORDER BY ${orderCol} desc
                </if>
	  	<![CDATA[
			   ) A WHERE ROWNUM <= #{last}) B
	    WHERE RN >= #{first}
		]]>
	</select>
	
	<!-- 게시글 개수 -->
	<select id="count" resultType="int">
		SELECT COUNT(*)
		FROM JOB_BOARD j
		<where>
			<include refid="jSelect" />
		</where>
	</select>
	
	<!-- 구인게시글 단건조회 -->
	<select id="getJob" resultType="com.eventi.left.job.service.JobBoardVO">
		SELECT JOB_NO,
				TITLE,
				JOB_CNTN,
				PAY,
				code_select(LOC) LOC,
				E_TYPE,
				code_select(E_TYPE) E_Type_Name,
				W_SDAY,
				W_EDAY,
				W_HOUR,
				QUALIFICATION,
				PREFERENCE,
				(SELECT SEV_NM 
                  FROM FILES 
                   WHERE TARGET_ID = JOB_NO
                   AND ROWNUM=1) AS IMG,
				USER_ID,
				DT,
				CLOSE_DT,
				SEE,
				SAVE,
				RPRT
			  ,CLOSE_DT - SYSDATE AS remain
			  ,(select count(*)
	              from likes l
	             where l.category = 'T03'
	              and l.target_No = #{jobNo}) as cnt
	          ,(select count(*)
	              from resume_board r
	             where r.job_No = #{jobNo}) as re_Count   
		FROM JOB_BOARD j
		WHERE JOB_NO  = #{jobNo}
	</select>
	
	<!-- 임시저장한 게시글 불러오기 -->
	<select id="jSave" resultType="com.eventi.left.job.service.JobBoardVO">
		SELECT *
		FROM JOB_BOARD
		WHERE USER_ID = #{userId}
		AND SAVE = 'Y'
	</select>
	
	<!-- 게시글 수정 jobno, userid, interest 제외-->
	<update id="getJobUpdate" parameterType="com.eventi.left.job.service.JobBoardVO">
		UPDATE JOB_BOARD
		SET 
		TITLE = #{title},
		JOB_CNTN = #{jobCntn},
		PAY = #{pay},
		LOC = #{loc},
		E_TYPE = #{eType},
		W_SDAY = #{wSday},
		W_EDAY = #{wEday},
		W_HOUR = #{wHour},
		QUALIFICATION = #{qualification},
		PREFERENCE = #{preference},
		IMG = #{img}	
		WHERE JOB_NO=#{jobNo}
	</update>
	
	<!-- 게시글 등록 -->
	<insert id="jobInsert">
		<selectKey keyProperty="jobNo" resultType="String" order="BEFORE">
		SELECT 'JB'|| JOB_BOARD_SEQ.NEXTVAL FROM DUAL
		</selectKey>
	
		INSERT INTO JOB_BOARD
				(JOB_NO, 
				TITLE, 
				JOB_CNTN, 
				PAY, 
				LOC, 
				E_TYPE, 
				W_SDAY, 
				W_EDAY, 
				W_HOUR, 
				QUALIFICATION, 
				PREFERENCE, 
				IMG, 
				USER_ID, 
				DT, 
				CLOSE_DT, 
				SAVE) <!-- DB -->
		VALUES(#{jobNo},#{title},#{jobCntn},#{pay},#{loc},#{eType}, #{wSday},#{wEday}, #{wHour},
				#{qualification},#{preference}, #{img}, #{userId}, sysdate, #{closeDt},#{save}) <!-- VO -->
	</insert>
	
	<!-- 게시글 삭제 -->
	<delete id="jobDelete">
		DELETE FROM JOB_BOARD
		WHERE JOB_NO=#{jobNo}
	</delete>
	
	<!-- 게시판 조회수 -->
	<update id="seeUp" parameterType="com.eventi.left.job.service.JobBoardVO">
		UPDATE JOB_BOARD SET
		SEE = SEE+1
		WHERE JOB_NO  = #{jobNo}
	</update>
	
	<!-- 마이페이지 구인게시글 조회 -->
	<select id="myJobList" resultType="com.eventi.left.job.service.JobBoardVO">
		SELECT JOB_NO,
				TITLE,
				JOB_CNTN,
				PAY,
				code_select(LOC) LOC,
				code_select(E_TYPE) E_TYPE,
				W_SDAY,
				W_EDAY,
				W_HOUR,
				QUALIFICATION,
				PREFERENCE,
				IMG,
				USER_ID,
				DT,
				CLOSE_DT,
				SAVE,
				CLOSE_DT - SYSDATE AS remain,
                CNT,
                RECOUNT,
                SEE              
         FROM (SELECT ROWNUM RN, A.* FROM(
		           SELECT DISTINCT J.*, 
		                 (SELECT COUNT(*) FROM LIKES WHERE TARGET_NO = J.JOB_NO) AS CNT,
		                 (SELECT COUNT(*) FROM RESUME_BOARD WHERE JOB_NO = J.JOB_NO) AS reCount
		            FROM JOB_BOARD J, RESUME_BOARD R
		             WHERE J.JOB_NO = R.JOB_NO(+)
		             AND J.USER_ID = #{userId} 
			<include refid="search" /> 
		    
		<![CDATA[
			   ) A WHERE ROWNUM <= #{last}) 
	    WHERE RN >= #{first}
		]]>
	</select>
	
	<!-- 마이페이지 구직신청게시글 조회 -->
	<select id="myApplyList" resultType="com.eventi.left.job.service.JobBoardVO">
		SELECT J.JOB_NO,
				CODE_SELECT(E_TYPE) E_TYPE,
				J.TITLE,				      
				J.W_SDAY,
				J.W_EDAY,
				J.PAY,
				J.LOC,
				J.CLOSE_DT       
		FROM (SELECT ROWNUM RN, A.* 
		       FROM(SELECT * FROM RESUME_BOARD R, JOB_BOARD J
		WHERE R.JOB_NO = J.JOB_NO
		
		<include refid="search" />
		
		<![CDATA[
			   ) A WHERE ROWNUM <= #{last}) 
	    WHERE RN >= #{first}
		]]>
	</select>
	
	<select id ="likeList" resultType="jobBoardVO">
		SELECT J.TITLE, (J.CLOSE_DT - SYSDATE )AS REMAIN
		            , (SELECT COUNT(*)
			              FROM RESUME_BOARD R) AS RE_COUNT, J.USER_ID, F.SEV_NM
		FROM JOB_BOARD J JOIN RESUME_BOARD R
		ON J.JOB_NO = R.JOB_NO
		JOIN LIKES L
		ON R.JOB_NO = L.TARGET_NO
		JOIN FILES F
		ON F.TARGET_ID = L.TARGET_NO
		WHERE L.USER_ID = #{userId}
	</select>
</mapper>