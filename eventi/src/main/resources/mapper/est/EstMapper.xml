<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eventi.left.estimate.mapper.EstMapper">
	<!-- Join에 자주쓰이는 컬럼설정 -->
<!-- 	<resultMap type="PropVO" id="PropVO">
		<result column="user_id" property="userId" />
	</resultMap>
	<resultMap type="EstVO" id="EstVO">
		<result column="e_no" property="eno" />
		<result column="event_type" property="eventType" />
		<result column="writing_dt" property="writingDate" />
		<result column="adoption_yn" property="adoptionYn" />
		<collection property="propVO" resultMap="PropVO" /> vo에 추가한 join용 변수
	</resultMap> -->

	<!-- 견적요청서 전체조회 -->
	<select id="getEstList" resultType="EstVO">
		SELECT E_NO, EVENT_TYPE, WRITING_DT, ADOPTION_YN
      FROM(select rownum rn, a.*
          from(select *
               from ESTIMATE
       <![CDATA[) A 
          WHERE ROWNUM <= #{last}) 
      WHERE RN >= #{first}]]>
	</select>

	<!-- 견적요청서 총 개수 -->
	<select id="count" resultType="int">
		SELECT COUNT(*)
		FROM ESTIMATE
	</select>
	
	<!-- 견적요청서 단건조회 -->
	<select id="getEst" resultType="EstVO">
		SELECT *
		FROM ESTIMATE
		WHERE E_NO = #{eno}
	</select>
	

	<!-- 견적요청서별 제안서 전체조회 -->
	<select id="getPropList" resultType="PropVO">
		SELECT *
		FROM PROPOSAL
		WHERE E_NO = #{eno}
	</select>

	<!-- 견적요청서 등록 -->
	<insert id="insertEst">
	<selectKey keyProperty="eno" resultType="String" order="AFTER">
			SELECT
			'ES'||(MAX(TO_NUMBER(SUBSTR(E_NO,3)))) ENO
			FROM ESTIMATE
		</selectKey>
		INSERT INTO ESTIMATE
		VALUES('ES'||eno_seq.nextval, #{userId}, #{eventType}, #{pats},
		#{expectedPl}, #{eventDate}, #{eventTime}, #{eventDuration},
		#{expectedLocal}, #{wishes}, sysdate, 'N')
	</insert>

	<!-- 업체 제안서 채택/후기수 조회 -->
	<select id="getCount" resultType="Map">
		SELECT
		(select count(*) from proposal where e_no = #{eno} and adoption_yn = 'Y')
		"adoption",
		(select count(*) from review where review_tgt= #{userId}) "review"
		from dual
	</select>
	
	<!-- 해당업체의 물품 조회(제안서 작성페이지) -->
	<select id="myGdList" resultType="rentGdVO">
	SELECT USER_ID, GOODS_NO, GOODS_NM, STOCK, RENTAL_PRC, RPST_IMG, GOODS_SIZE, TOTAL_STOCK
	FROM RENTAL_GD
	WHERE USER_ID = #{userId}
	</select>
	
	<!-- 견적요청서 삭제 -->
	<delete id="deleteEst">
	DELETE ESTIMATE
	WHERE E_NO = #{eno}
	AND USER_ID = #{userId}
	</delete>
	
	<!-- 제안서 등록 -->
	<insert id="insertProp">
	INSERT INTO PROPOSAL
	VALUES('PR'||PNO_SEQ.NEXTVAL, #{eno}, #{userId}, #{companyInt}, #{eventExps}, #{totalPrc}, 'N', SYSDATE)
	</insert>
	
	
<!--  제안서 한건조회 result Map 
	<resultMap type="PropVO" id="propMap">
		<result column="p_no" property="pno" />
		<result column="event_type" property="eventType" />
		<result column="writing_dt" property="writingDt" />
		<result column="adoption_yn" property="adoptionYn" />
		<collection property="propGdList" resultMap="propGdMap" /> vo에 추가한 join용 변수
	</resultMap>
	
	<resultMap type="PropGdVO" id="propGdMap">
		<result column="goods_nm" property="goodsNm" />
		<result column="unit_prc" property="unitPrc" />
		<result column="count" property="count" />
	</resultMap> 
	제안서 한건 조회 join
	<select id="getProp" resultType="PropVO" resultMap="propMap">
	 SELECT p.p_no, p.company_int, p.event_exps, p.total_prc, p.writing_dt, gd.goods_nm, gd.unit_prc, gd.count
	 FROM PROPOSAL P LEFT JOIN PROPOSAL_GD gd
	 ON p.p_no = gd.p_no
	 WHERE p.p_no = #{pno}
	</select> -->
	
	<!-- 제안서 단건조회 -->
	<select id="getProp" resultType="PropVO">
	 select *
	 from proposal
	 where p_no = #{pno}
	</select>
	
	<!-- 제안서에 등록된 물품조회 -->
	<select id="getPropGdList" resultType="PropGdVO">
	select *
	from proposal_gd
	where p_no = #{pno}
	</select>
	
	<!-- 제안서 삭제 -->
	<delete id="delProp">
	DELETE FROM proposal
	WHERE p_no = #{pno}
	</delete>
	
	<!--  제안서 채택 -->
	<update id="chooesProp">
	update proposal
	set adoption_yn = 'Y'
	where p_no = #{pno}
	</update>
	

</mapper>