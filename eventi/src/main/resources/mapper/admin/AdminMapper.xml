<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eventi.left.admin.mapper.AdminMapper">

	<!-- 회원 검색 조건 -->
	<sql id="mSelect">
		<where>
			<!-- 회원등급별 정렬 -->
			<if test='auth eq "1".toString()'>
				AND USER_GRADE != 'ROLE_BUSI'
			</if>
			<if test='auth eq "2".toString()'>
				AND USER_GRADE = 'ROLE_BUSI'
			</if>

			<!-- 회원아이디 검색처리 -->
			<if test="userId != null and userId != ''">
				AND USER_ID LIKE '%'||#{userId}||'%'
			</if>

			<!-- 계정상태 정렬 -->
			<if
				test="userState != '' and userState != null and userState != 'Normal'">
				AND USER_STATE = #{userState}
			</if>
		</where>
	</sql>
	
	<!-- 자격증 검색 조건 (where) -->
	<sql id="cSelectw">
		<where>
			<!-- 승급유형별 정렬 -->
			<if test="crtfType != null and crtfType != ''">
				AND CRTF_TYPE = #{crtfType}
			</if>
			
			<!-- 승인상태별 정렬 -->
			<if test="accpYN != null and accpYN != ''">
				AND ACCP_YN = #{accpYN}
			</if>

			<!-- 회원아이디 검색처리 -->
			<if test="userId != null and userId != ''">
				AND USER_ID LIKE '%'||#{userId}||'%'
			</if>
		</where>
	</sql>
	
	<!-- 자격증 검색 조건 -->
	<sql id="cSelect">
			<!-- 승급유형별 정렬 -->
			<if test="crtfType != null and crtfType != ''">
				AND CRTF_TYPE = #{crtfType}
			</if>
			
			<!-- 승인상태별 정렬 -->
			<if test="accpYN != null and accpYN != ''">
				AND ACCP_YN = #{accpYN}
			</if>

			<!-- 회원아이디 검색처리 -->
			<if test="userId != null and userId != ''">
				AND USER_ID LIKE '%'||#{userId}||'%'
			</if>
	</sql>

	<!-- 전체 회원 조회 -->
	<select id="memberList" resultType="MemberVO">
		SELECT 	USER_ID,
				USER_PASSWORD,
				USER_EMAIL,
				USER_NAME NAME,
				USER_PHONE,
				CODE_SELECT(USER_MESSAGING) USER_MESSAGING,
				USER_GRADE AUTH,
				CODE_SELECT(USER_GRADE) USER_GRADE,
				RPRT,
				DEPOTR,
				BANK,
				ACCNT,
				USER_REGDATE,
				USER_STATE
		FROM 	(SELECT ROWNUM RN, A.*
				FROM 	(SELECT *
						FROM MEMBERS
						<include refid="mSelect" />
						ORDER BY USER_REGDATE DESC
			  	<![CDATA[
			  			) A 
			  	WHERE ROWNUM <= #{last}) 
		WHERE 	RN >= #{first}
			  	]]>
	</select>

	<!-- 조건별 회원정보 총 개수 -->
	<select id="count" resultType="int">
		SELECT COUNT(*)
		FROM MEMBERS
		<include refid="mSelect" />
	</select>

	<!-- 자격증 list -->
	<select id="certList" resultType="CrtfVO">
		SELECT 	CRTF_ID,
				USER_ID,
				CRTF_NAME,
				CRTF_NUM,
				ACCP_YN,
				CRTF_TYPE,
				ACCP_DATE,
				REQ_DATE
		FROM 	(SELECT ROWNUM RN, A.*
				FROM	(SELECT *
						FROM CERTIFICATE
						WHERE ACCP_YN = #{accpYN}
						<include refid="cSelect" />
						ORDER BY REQ_DATE DESC
			   <![CDATA[
			   			) A 
			  	WHERE ROWNUM <= #{last}) 
		WHERE RN >= #{first}
					]]>
	</select>

	<!-- 자격증 count -->
	<select id="certCount" resultType="int">
		SELECT COUNT(*)
		FROM CERTIFICATE
		<include refid="cSelectw" />
	</select>
	
	<!-- 회원등급수정 -->
	<update id="updateMember">
		UPDATE MEMBERS
		SET USER_GRADE = #{auth}
		WHERE USER_ID = #{userId}
	</update>
	<!-- 자격증 update -->
	<update id="crtfUpdate">
		UPDATE CERTIFICATE
		SET ACCP_YN = #{accpYN}, ACCP_DATE = SYSDATE
		WHERE CRTF_ID = #{crtfId}
	</update>

	<!-- 공모전 count -->
	<select id="contCount" resultType="int">
		SELECT COUNT(*)
		FROM CONTEST c, WINNER w
		WHERE c.C_NO = w.CO_NO 
		AND w.USER_ID IS NOT NULL
		AND c.SETT_YN != 'Y'
		<include refid="conSelect" />
		AND (CASE WHEN DT_EXTNS IS NOT NULL THEN DT_EXTNS
            		ELSE DT_CLS
               END <![CDATA[) < SYSDATE]]>
	</select>
	<sql id="conSelect">
		<if test="ttl != null and ttl !=''">
			AND c.TTL LIKE '%'||#{ttl}||'%'
		</if>
	</sql>
	
	
	<!-- 공모전 list -->
	<select id="contestList" resultType="hashmap">
		SELECT	C_NO cNo, 
        		PAY pay, 
        		WRITER writer, 
        		TTL ttl, 
        		TO_CHAR(DT_REG, 'YYYY-mm-dd') dtReg, 
        		TO_CHAR((CASE 	WHEN DT_EXTNS IS NOT NULL THEN DT_EXTNS
        				ELSE DT_CLS
        				END), 'YYYY-mm-dd') dtCls, 
        		(SELECT USER_ID
        		FROM 	WINNER
        		WHERE 	CO_NO = C_NO
        		AND 	GRADE = 1) AS firstId,
        		(SELECT USER_ID
        		FROM 	WINNER 
        		WHERE 	CO_NO = C_NO
        		AND 	GRADE = 2) AS secondId, 
        		(SELECT USER_ID
        		FROM 	WINNER
        		WHERE 	CO_NO = C_NO
        		AND 	GRADE = 3) AS thirdId
		FROM	(SELECT ROWNUM RN, A.*
				FROM	(SELECT *
						FROM 	(SELECT DISTINCT c.*
								FROM CONTEST c, WINNER w
								WHERE c.C_NO = w.CO_NO 
								AND w.USER_ID IS NOT NULL
								AND c.SETT_YN != 'Y'
								<include refid="conSelect" />
								)
								<![CDATA[) A 
			  	WHERE ROWNUM <= #{last}) 
		WHERE RN >= #{first}]]>
	</select>
	
	<!-- 회원신고count -->
	<select id="punishCount" resultType="int">
		SELECT COUNT(*)
		FROM PUNISH
		WHERE BAN_TYPE = #{banType}
		<include refid="pSelect" />
	</select>
	
	<!-- 회원신고 조회 -->
	<select id="punishList" resultType="PunishVO">
	SELECT 	PUN_NO,
			USER_ID,
			TARGET_ID,
			(SELECT CODE_NAME
			FROM MNCODE
			WHERE CODE_ID = TARGET_CAT)	TARGET_CAT,
			DT,
			BAN_TYPE,
			BAN_CNTN,
			BAN_RSLT,
			ST_ORDER
	FROM 	(SELECT ROWNUM RN, A.*
			FROM	(SELECT *
					FROM PUNISH
					WHERE BAN_TYPE = #{banType}
					<include refid="pSelect" />
					ORDER BY ST_ORDER, DT
			<![CDATA[) A 
			WHERE ROWNUM <= #{last}) 
		WHERE RN >= #{first}]]>
	</select>
	
	<!-- 신고 where 조건 (where) -->
	<sql id="pSelect">
			<!-- 승급유형별 정렬 -->
			<if test="targetCat != null and targetCat != ''">
				AND TARGET_CAT = #{targetCat}
			</if>
			<!-- 회원아이디 검색처리 -->
			<if test="userId != null and userId != ''">
				AND (USER_ID LIKE '%'||#{userId}||'%'
					OR TARGET_ID LIKE '%'||#{userId}||'%')
			</if>
	</sql>
	
	<!-- 회원신고 타겟 코드 조회 -->
	<select id="getMemberCat" resultType="CodeVO">
		SELECT CODE_ID, CODE_NAME
		FROM MNCODE 
		WHERE CL_ID = 'T'
		AND CODE_ID IN ('T06','T07', 'T08')
		ORDER BY CODE_ID
	</select>
	
	<!-- 게시글신고 타겟 코드 조회 -->
	<select id="getBoardCat" resultType="CodeVO">
		SELECT CODE_ID, CODE_NAME
		FROM MNCODE 
		WHERE CL_ID = 'T'
		AND CODE_ID IN ('T01','T03', 'T04')
		ORDER BY CODE_ID
	</select>
	
	<!-- 신고 게시글 조회 -->
	<select id="punishBrdList" resultType="hashmap">
		SELECT	PUN_NO,
				USER_ID,
				TARGET_ID,
				CODE_SELECT(TARGET_CAT) TARGET_CAT,
				TO_CHAR(DT, 'YYYY-mm-dd') DT,
				BAN_TYPE,
				BAN_CNTN,
				BAN_RSLT,
				WRITER,
				ST_ORDER,
				(CASE 	WHEN TARGET_CAT = 'T01' THEN	(SELECT TTL
												   		FROM CONTEST
												   		WHERE C_NO = TARGET_ID)
						WHEN TARGET_CAT = 'T03' THEN 	(SELECT TITLE
														FROM JOB_BOARD
														WHERE JOB_NO = TARGET_ID)
						WHEN TARGET_CAT = 'T04' THEN	(SELECT TTL
														FROM B_BOARD
														WHERE B_BOARD_NO = TARGET_ID)
						END) AS TTL
		FROM	(SELECT ROWNUM RN, A.*
				FROM	(SELECT *
						FROM 	PUNISH
						WHERE	BAN_TYPE = #{banType}
						<include refid="pSelect" />
						ORDER BY ST_ORDER, DT
			   <![CDATA[) A 
			  	WHERE ROWNUM <= #{last}) 
		WHERE RN >= #{first}]]>
	</select>

	<!-- 회원신고 승인 -->
	<update id="banMember">
		UPDATE MEMBERS
		SET RPRT = 	RPRT + 1,
			LOCKED = CASE 	WHEN RPRT = 4 THEN '0'
							WHEN RPRT = 9 THEN '0'
							WHEN RPRT = 14 THEN '0'
							ELSE '1' END,
			LOCKED_DT = CASE 	WHEN RPRT = 4 THEN SYSDATE+10
								WHEN RPRT = 9 THEN SYSDATE+30
							 	WHEN RPRT = 14 THEN SYSDATE+40000
							 	ELSE NULL END
		WHERE USER_ID = #{targetId}
		AND LOCKED = '1'
	</update>
	<update id="banMemAccept">
		UPDATE PUNISH
		SET BAN_RSLT = 'Y',
			ST_ORDER = 1
		WHERE PUN_NO = #{punNo}
	</update>
	
	<!-- 회원신고 거절 -->
	<update id="banReject">
		UPDATE PUNISH
		SET BAN_RSLT = 'N',
			ST_ORDER = 1
		WHERE PUN_NO = #{punNo}
	</update>
	
	<!-- 게시글신고 승인 -->
	<update id="banBoard1">
		UPDATE CONTEST
		SET RPRT = RPRT + 1
		WHERE C_NO = #{targetId}
	</update>
	<update id="banBoard2">
		UPDATE JOB_BOARD
		SET RPRT = RPRT + 1
		WHERE JOB_NO = #{targetId}
	</update>
	<update id="banBoard3">
		UPDATE B_BOARD
		SET RPRT = RPRT + 1
		WHERE B_BOARD_NO = #{targetId}
	</update>
	<update id="banBrdAccept">
		UPDATE PUNISH
		SET BAN_RSLT = 'Y',
			ST_ORDER = 1
		WHERE PUN_NO = #{punNo}
	</update>
	
	<!-- 회계 조회 -->
	<select id="moneyCount" resultType="int">
		select count(*)
		from money
		<include refid="moSelect" />
	</select>
	
	<select id="moneyList" resultType="MoneyVO">
		SELECT 	MO_NUM,
				CODE_SELECT(BANK_NAME) BANK_NAME,
				BANK_NAME BANK_CODE,
				BANK_ACCOUNT,
				MO_TYPE,
				MO_PRICE,
				USER_ID,
				PAY_NO,
				SETT_YN,
				TARGET_ID,
				CODE_SELECT(MO_CAT) MO_CAT,
				USER_NAME,
				TO_CHAR(MO_DT, 'YYYY-mm-dd') MO_DT,
				TO_CHAR(SETT_DT, 'YYYY-mm-dd') SETT_DT
		FROM (SELECT ROWNUM RN, A.*
				FROM	(SELECT *
						FROM 	MONEY
						<include refid="moSelect" />
						ORDER BY MO_DT DESC
			   <![CDATA[) A 
			  	WHERE ROWNUM <= #{last}) 
		WHERE RN >= #{first}]]>
	</select>
	
	
	<!-- 회계업데이트 -->
	<update id="updateMoney">
		UPDATE MONEY 
		SET PAY_NO = #{payNo},
			SETT_YN = #{settYN},
			SETT_DT = #{settDt}
		WHERE MO_NUM = #{moNum}
	</update>
	
	<sql id="moSelect">
		<where>
			<if test="moType != null and moType !=''">
				and MO_TYPE = #{moType}
			</if>
			<if test="settYN != null and settYN !=''">
				and SETT_YN = #{settYN}
			</if>
			<if test="userId != null and userId !=''">
				and (USER_ID LIKE '%'||#{userId}||'%'
					or TARGET_ID LIKE '%'||#{userId}||'%')
			</if>
			
		</where>
	</sql>
	
	<!-- 우승자 조회 -->	
	<select id="winnerList" resultType="MoneyVO">
		SELECT 	W_PAY MO_PRICE,
				USER_ID,
				(SELECT USER_NAME
				FROM MEMBERS
				WHERE USER_ID = w.USER_ID) USER_NAME,
				(SELECT CODE_SELECT(BANK)
				FROM MEMBERS
				WHERE USER_ID = w.USER_ID) BANK_NAME,
				(SELECT ACCNT
				FROM MEMBERS
				WHERE USER_ID = w.USER_ID) BANK_ACCOUNT
		FROM WINNER w
		WHERE CO_NO = #{coNo}
	</select>
	<select id="winnerListM" resultType="MoneyVO">
		SELECT 	W_PAY MO_PRICE,
				USER_ID,
				(SELECT USER_NAME
				FROM MEMBERS
				WHERE USER_ID = w.USER_ID) USER_NAME,
				(SELECT BANK
				FROM MEMBERS
				WHERE USER_ID = w.USER_ID) BANK_NAME,
				(SELECT ACCNT
				FROM MEMBERS
				WHERE USER_ID = w.USER_ID) BANK_ACCOUNT
		FROM WINNER w
		WHERE CO_NO = #{coNo}
	</select>
	
	<!-- 공모전 수정 -->
	<update id="updateContest">
		UPDATE CONTEST
		SET SETT_YN = 'Y'
		WHERE C_NO = #{coNo}
	</update>
	
	<!-- 정산테이블 입력 -->
	<insert id="insertMoney">
		INSERT INTO MONEY	(MO_NUM,
							BANK_NAME,
							BANK_ACCOUNT,
							MO_TYPE,
							MO_PRICE,
							USER_ID,
							USER_NAME,
							SETT_YN,
							TARGET_ID,
							MO_CAT,
							MO_DT)
			VALUES(
					'MO'||MONEY_SEQ.NEXTVAL,
			        #{bankName},
			        #{bankAccount},
			       	'M2',
			        #{moPrice},
			        #{userId},
			        #{userName},
			        'N',
			        #{userId},
			        'T01',
			        SYSDATE
	       		 )
	</insert>
	
	<!-- 방문자 수 count -->
	<select id="countVisit" resultType="VisitorVO">
		SELECT TO_CHAR(VISIT_DATE,'YY/MM/DD') VISIT_DATE, COUNT(*) VISIT_COUNT
		FROM VISITOR
		WHERE VISIT_DATE BETWEEN TO_CHAR(SYSDATE - 7) AND SYSDATE
		GROUP BY TO_CHAR(VISIT_DATE,'YY/MM/DD')
		ORDER BY VISIT_DATE
	</select>
	
	<!-- 일별 정보 조회 -->
	<select id="getDailyInfo" resultType="hashmap">
		SELECT  D.DAILYDT DAILYDT,
		        TO_CHAR(NVL(D.DAILYMOIN,0),'999,999,999') DAILYMOIN,
		        TO_CHAR(NVL(D.DAILYMOOUT,0),'999,999,999') DAILYMOOUT,
		        NVL(D.VISITOR,0) VISITOR,
		        NVL(M.REGISTER,0) REGISTER
		FROM    (SELECT V.DAILYDT DAILYDT,
		                M.DAILYMOIN DAILYMOIN,
		                M.DAILYMOOUT DAILYMOOUT,
		                V.VISITOR VISITOR
		        FROM    (SELECT M1.DAILYDT DAILYDT, 
		                        M1.DAILYMOIN DAILYMOIN,
		                        M2.DAILYMOOUT DAILYMOOUT
		                FROM    (SELECT	trunc(MO_DT) AS DAILYDT,
		                        NVL(SUM(MO_PRICE),0) DAILYMOIN
		                        FROM MONEY
		                        WHERE MO_TYPE='M1'
		                        GROUP BY trunc(MO_DT)) M1,
		                        (SELECT trunc(MO_DT) AS DAILYDT,
		                                NVL(SUM(MO_PRICE),0) DAILYMOOUT
		                        FROM MONEY
		                        WHERE MO_TYPE='M2'
		                        AND SETT_YN = 'Y'
		                        GROUP BY trunc(MO_DT)) M2
		                WHERE M1.DAILYDT = M2.DAILYDT(+)) M,
		                (SELECT trunc(VISIT_DATE) DAILYDT,
		                        COUNT(*) VISITOR
		                FROM VISITOR
		                GROUP BY trunc(VISIT_DATE)) V
		        WHERE   V.DAILYDT = M.DAILYDT(+)) D,
		        (SELECT trunc(USER_REGDATE) DAILYDT,
		                COUNT(*) REGISTER
		        FROM MEMBERS
		        GROUP BY trunc(USER_REGDATE)) M
		WHERE D.DAILYDT = M.DAILYDT(+)
        AND D.DAILYDT BETWEEN TO_CHAR(SYSDATE - 9) AND SYSDATE
		ORDER BY D.DAILYDT DESC
	</select>
	
	<!-- 문의사항 가져오기-->
	<select id="getQnaList" resultType="hashmap">
		SELECT  *
		FROM 	(SELECT Q_NO,
						USER_ID,
						NVL(TTL,'제목없음') TTL,
						TO_CHAR(WRITING_DT,'YY/MM/DD') WRITING_DT,
						REREP_TGT
				FROM QUESTIONS
                WHERE CATEGORY = 'T14'
                AND REREP_TGT IS NULL
				ORDER BY TO_NUMBER(SUBSTR(Q_NO,3)) DESC)
		<![CDATA[WHERE ROWNUM <= 4]]>
	</select>
	
	<select id="getCrtf" resultType="int">
		SELECT NVL(COUNT(*),0)
		FROM CERTIFICATE
		WHERE ACCP_YN = 'R'
	</select>
	<select id="getCont" resultType="int">
		SELECT NVL(COUNT(DISTINCT C_NO),0)
		FROM CONTEST C, WINNER W
		WHERE C.C_NO = W.CO_NO 
		AND W.USER_ID IS NOT NULL
		AND C.SETT_YN = 'N'
	</select>
	<select id="getBmem" resultType="int">
		SELECT NVL(COUNT(*),0)
		from PUNISH
		where BAN_RSLT = 'R'
		and ban_type = 'P2'
	</select>
	<select id="getBbrd" resultType="int">
		SELECT NVL(COUNT(*),0)
		from PUNISH
		where BAN_RSLT = 'R'
		and ban_type = 'P1'
	</select>
	<select id="getMon" resultType="int">
		SELECT NVL(COUNT(*),0)
		FROM MONEY
		WHERE MO_TYPE = 'M2'
		AND SETT_YN='N'
	</select>
</mapper>