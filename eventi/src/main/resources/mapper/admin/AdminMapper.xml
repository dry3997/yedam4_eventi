<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eventi.left.admin.mapper.AdminMapper">

	<sql id="mSelect">
		<where>
			<!-- 회원등급별 정렬 -->
			<if test='auth eq "1".toString()'>
				AND USER_GRADE != 'ROLE_BUSI'
			</if>
			<if test='auth eq "2".toString()'>
				AND USER_GRADE = 'ROLE_BUSI'
			</if>

			<!-- 회원아이디 검색처리 -->
			<if test="userId != null and userId != ''">
				AND USER_ID LIKE '%'||#{userId}||'%'
			</if>

			<!-- 계정상태 정렬 -->
			<if
				test="userState != '' and userState != null and userState != 'Normal'">
				AND USER_STATE = #{userState}
			</if>
		</where>
	</sql>
	<sql id="cSelectw">
		<where>
			<!-- 승급유형별 정렬 -->
			<if test="crtfType != null and crtfType != ''">
				AND CRTF_TYPE = #{crtfType}
			</if>

			<!-- 회원아이디 검색처리 -->
			<if test="userId != null and userId != ''">
				AND USER_ID LIKE '%'||#{userId}||'%'
			</if>
		</where>
	</sql>
	
	<sql id="cSelect">

			<!-- 승급유형별 정렬 -->
			<if test="crtfType != null and crtfType != ''">
				AND CRTF_TYPE = #{crtfType}
			</if>

			<!-- 회원아이디 검색처리 -->
			<if test="userId != null and userId != ''">
				AND USER_ID LIKE '%'||#{userId}||'%'
			</if>

	</sql>

	<!-- 전체 회원 조회 -->
	<select id="memberList" resultType="MemberVO">
		SELECT 	USER_ID,
				USER_PASSWORD,
				USER_EMAIL,
				USER_NAME NAME,
				USER_PHONE,
				USER_MESSAGING,
				USER_GRADE AUTH,
				RPRT,
				DEPOTR,
				BANK,
				ACCNT,
				USER_REGDATE,
				USER_STATE
		FROM 	(SELECT ROWNUM RN, A.*
				FROM 	(SELECT *
						FROM MEMBERS
						<include refid="mSelect" />
						ORDER BY USER_REGDATE DESC
			  	<![CDATA[
			  			) A 
			  	WHERE ROWNUM <= #{last}) 
		WHERE 	RN >= #{first}
			  	]]>
	</select>

	<!-- 조건별 회원정보 총 개수 -->
	<select id="count" resultType="int">
		SELECT COUNT(*)
		FROM MEMBERS
		<include refid="mSelect" />
	</select>

	<select id="certList" resultType="CrtfVO">
		SELECT 	CRTF_ID,
				USER_ID,
				CRTF_NAME,
				CRTF_NUM,
				ACCP_YN,
				CRTF_TYPE,
				ACCP_DATE,
				REQ_DATE
		FROM 	(SELECT ROWNUM RN, A.*
				FROM	(SELECT *
						FROM CERTIFICATE
						WHERE ACCP_YN = #{accpYN}
						<include refid="cSelect" />
						ORDER BY REQ_DATE DESC
			   <![CDATA[) A 
			  	WHERE ROWNUM <= #{last}) 
		WHERE RN >= #{first}]]>
	</select>

	<select id="certCount" resultType="int">
		SELECT COUNT(*)
		FROM CERTIFICATE
		<include refid="cSelectw" />
	</select>

</mapper>